/***** header ******/

// Create a segmented control using a radio group
// look at the following structure for an example
// css:
// .controls {
//  +segmented-controls()
// }
// html:
// <div class="controls">
//  <input id="control" type="radio" />
//  <label for="control">
//    Segmented
//  </label>
// </div>
//
// $amount - how many controls you need
// $width  - the max-width a single control will be
// $margin - margin around a single control
// $active - the active text color of a checked control
=segmented-controls($amount: 2, $width: 80px, $margin: 2px, $active: inherit)
  $_margin: $margin * 2
  $_width: calc(100% / $amount)

  display: flex
  max-width: $width * $amount
  width: 100%
  position: relative
  user-select: none
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0)
  position: relative
  z-index: 1
  > input
    display: none
    &:checked + label
      color: $active
    @for $i from 1 through $amount
      $index: $i - 1
      &:nth-of-type(#{$i}):checked
        ~ label:last-of-type:before
          transform: translateX(calc(#{100% * $index} + #{$_margin * $index}))
  label
    flex: 1
    text-align: center
    white-space: nowrap
    overflow: hidden
    text-overflow: ellipsis
    cursor: pointer
    // we use the last label's pseudo element as the active state
    // to eliminate the need for an arbitrary element
    &:last-of-type:before
      content: ""
      display: block
      max-width: calc(#{$_width} - #{$_margin})
      margin: $margin
      position: absolute
      top: 0
      right: 0
      bottom: 0
      left: 0
      z-index: -1
      transform: translateX(0)

.flight-types
  +segmented-controls(3, 112px, 0px, #3395DE)
  margin: 0 auto
  font-size: 12px
  border: 1px solid #fff
  border-radius: 3px
  color: #fff
  label
    padding: 6px 3px
    transition: color 250ms cubic-bezier(0,.95,.38,.98)
    &:before
      background: #fff
      transition: all 250ms cubic-bezier(0,.95,.38,.98)
    &:not(:last-child)
      border-right: 1px solid #fff

